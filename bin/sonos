#!/usr/bin/env node
var simplySonos = require("../app");
var network = simplySonos.network;

var optimist = require('optimist')
	.usage('Command List:\n--------------------------------\n'+simplySonos);

var argv = _processArguments(optimist.argv);
function _processArguments(argv){

	if(argv._ instanceof Array && argv._.length > 0){
		switch(argv._[0]){

			case "help":
				optimist.showHelp();
				break;

			default:
				var cmdName = argv._[0];
				if(simplySonos[cmdName] && typeof simplySonos[cmdName].send === 'function'){

					var options = {
						ipAddress: (argv['i']) ? argv['i'] : '',
						port:      (argv['p'] != null) ? argv['p'] : simplySonos[cmdName].port,
						uri:       (argv['u'] != null) ? argv['u'] : simplySonos[cmdName].uri,
						// location:  (argv['l'] != null) ? argv['l'] : simplySonos[cmdName].location,
						status:    (argv['s'] != null) ? argv['s'] : simplySonos[cmdName].satus,
						level:    (argv['l'] != null) ? argv['l'] : simplySonos[cmdName].level
					}


					simplySonos[cmdName].send(options, function callback(error, response){
						if(error){
							console.log(error);
						}else if(response){
							console.log(stringify(response));
						}else{
							console.log("Command finished successfully");
						}
						process.exit(error);
					});
				}else{
					console.log("Could not run the command that you supplied.\n");
					optimist.showHelp();
				}
				break;
		}
	}
}

function stringify(obj, indent){
	if(typeof obj === "string") { return obj; }

	indent = (indent != null) ? indent : 0;
	var str = '';
	for(var key in obj){
		if(key !== "toString"){
			str += tabSpacing(indent)+key+": ";
			if(typeof obj[key] === "string"){
				str += obj[key]+"\n"
			}else if(typeof obj[key] !== "function"){
				str += "\n"+stringify(obj[key], indent+1);
			}
		}
	}
	return str;
}

function tabSpacing(indent){
	var str = "";
	for(var i=0; i<indent; i++){
		str += "--";
	}
	if(indent > 0){ str += " "; }
	return str;
}
